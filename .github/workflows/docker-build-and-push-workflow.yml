name: "Docker build and push"

on:
  workflow_call:
    inputs:
      docker-image-repo:
        description: Docker image repository
        type: string
        required: true
      publish:
        description: Publish(push) to image repository
        type: boolean
        default: false
      version:
        type: string
        required: false
        description: Semvers string. If empty, the ref/tag will be used (if on.tag trigger).
        default: ''

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.docker-image-repo }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
            type=semver,pattern={{major}},value=${{ inputs.version }}
            type=ref,event=branch,suffix=-{{ sha }}
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
          flavor: |
            latest=false

      - name: Lint Dockerfile using Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: dockerfile
          quiet: false
          container_user: tomcat

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: '${{ inputs.docker-image-repo }}'
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'

      - name: Build and export Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: test:test

      - name: Test Docker image
        run: |
          set -x

          docker image inspect test:test
          docker run --rm -p 8080:8080 -e dtap.stage=LOC --name=test -d test:test

          sleep 30

          RETRY_COUNT=0
          HEALTH=$(docker inspect --format='{{json .State.Health.Status}}' test)
          until [ "$HEALTH" = '"healthy"' ]
          do
            if [ $RETRY_COUNT -gt 15 ]
              then
                  docker inspect test
                  docker logs test
                  exit 1
            fi

            let RETRY_COUNT+=1
            HEALTH=$(docker inspect --format='{{json .State.Health.Status}}' test)
            sleep 15
          done

          docker inspect test
          docker logs test
        timeout-minutes: 5
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.publish }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
